Renderizando Lista #01
    Vamos criar uma pasta Produtos e dentro dela vamos criar um arquivo com um json para simular a nossa resposta
        produtos.js
            export default [
                { id: 1, nome: 'Last Of Us 2', preco: 149.99 },
                { id: 2, nome: 'Caderno', preco: 19.99 },
                { id: 3, nome: 'PlayStation 5', preco: 2599.99 },
                { id: 4, nome: 'Macbook', preco: 9879.99 },
                { id: 5, nome: 'Caneta', preco: 4.99 },
            ]
    
    Agora vamos criar um componente de lista de produtos ListaProdutos.js:
    import produtos from './produtos'
​
    export default props => {
        function obterLista() {
            return produtos.map(p => {
                return (
                    <Text key={p.id}>
                        {p.id}) {p.nome} tem preço R$ {p.preco}
                    </Text>
                )
            })
        }
​
        return (
            <>
                <Text>
                    Lista de Produtos
                </Text>
                {obterLista()}
            </>
        )
    }
​
    Impotar ListaProdutos em App.js
​
Renderizando Lista - FlatList
    criar um componente de lista de produtos ListaProdutos2.js:
        import produtos from './produtos'
​
        export default props => {
            const produtoRender = ({ item: p }) => {
                return <Text>{p.id}) {p.nome} - R$ {p.preco}</Text>
            }
​
            return (
                <>
                    <Text>
                        Lista de Produtos V2
                    </Text>
                    <FlatList
                        data={produtos}
                        keyExtractor={i => `${i.id}`}
                        renderItem={produtoRender}
                    />
                </>
            )
        }
​
Componentes Controlados
    criar componente DigiteSeuNome.js:
        import React, { useState } from 'react'
        import { View, TextInput, Text } from 'react-native'
​
​
        export default props => {
            const [nome, setNome] = useState('')
            return (
                <View>
                    <Text>{nome}</Text>
                    <TextInput
                        placeholder="Digite seu Nome"
                        value={nome}
                        onChangeText={nome => setNome(nome)}/>
                </View>
            )
        }